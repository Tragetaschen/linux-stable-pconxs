/*
 * Copyright 2016 Kai Ruhnau <kai.ruhnau@target-sg.com>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of
 *     the License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public
 *     License along with this file; if not, write to the Free
 *     Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
 *     MA 02110-1301 USA
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 *
 */


#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/pwm/pwm.h>
#include "imx6dl.dtsi"

/ {
	model = "Keith&Koep Trizeps VII DL SoM";
	compatible = "keithkoep,imx6sx-trizeps-vii", "fsl,imx6dl";

	memory {
		reg = <0x10000000 0x40000000>;
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;
		reg_usb_otg_vbus: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "usb_otg_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio2 0 1>;
		};
		reg_usb_ht_vbus: regulator@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "usb_h1_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio2 2 1>;
		};
	};
};


&i2c1 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "disabled";
};
&i2c2 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2_2>;
	status = "okay";
	pmic: pfuze100@08 {
		compatible = "fsl,pfuze100";
		reg = < 0x08 >;
		status = "okay";
		regulators {
			sw1a_reg: sw1a {
				regulator-name = "PFUZE100_SW1A";
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				/*valid-ops-mask = REGULATOR_CHANGE_COLTAGE;
				  valid-modes-mask = 0;*/
				regulator-boot-on;
				regulator-always-on;
			};
			sw1c_reg: sw1c {
				regulator-name = "PFUZE100_SW1C";
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				regulator-always-on;
				regulator-boot-on;
/* initial state? PM_SUSPEND_MEM, state_mem = {...} */
			};
			sw2_reg: sw2 {
				regulator-name = "PFUZE100_SW2";
				regulator-min-microvolt = <3000000>;
				regulator-max-microvolt = <3000000>;
				regulator-boot-on;
			};
			sw3a_reg: sw3a {
				regulator-name = "PFUZE100_SW3A";
				regulator-min-microvolt = <1500000>;
				regulator-max-microvolt = <1500000>;
				regulator-always-on;
				regulator-boot-on;
			};
			sw3b_reg: sw3b {
				regulator-name = "PFUZE100_SW3B";
				regulator-min-microvolt = <1500000>;
				regulator-max-microvolt = <1500000>;
				regulator-always-on;
				regulator-boot-on;
			};
			sw4_reg: sw4 {
				regulator-name = "PFUZE100_SW4";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
				regulator-boot-on;
			};
			swbst_reg: swbst {
				regulator-name = "PFUZE100_SWBST";
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5000000>;
				regulator-always-on;
			};
			vsnvs_reg: vsnvs {
				regulator-name = "PFUZE100_VSNVS";
				regulator-min-microvolt = <1100000>;
				regulator-max-microvolt = <3000000>;
				regulator-always-on;
			};
			vref_reg: vrefddr {
				regulator-name = "PFUZE100_VREFDDR";
				regulator-always-on;
				regulator-boot-on;
			};
			vgen1_reg: vgen1 {
				regulator-name = "PFUZE100_VGEN1";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1500000>;
			};
/*
			vgen2_reg: vgen2 {
				regulator-name = "PFUZE100_VGEN2";
				regulator-min-microvolt = <1100000>;
				regulator-max-microvolt = <1100000>;
				regulator-always-on;
			};
			vgen3_reg: vgen3 {
				regulator-name = "PFUZE100_VGEN3";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
			};
*/
			vgen4_reg: vgen4 {
				regulator-name = "PFUZE100_VGEN4";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-boot-on;
				regulator-always-on;
			};
			vgen5_reg: vgen5 {
				regulator-name = "PFUZE100_VGEN5";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
			vgen6_reg: vgen6 {
				regulator-name = "PFUZE100_VGEN6";
				regulator-min-microvolt = <2500000>;
				regulator-max-microvolt = <2500000>;
				regulator-always-on;
			};
		};
	};
};

&fec {
	pinctrl-names = "default";
	status = "disabled";
	phy-reset-gpios = <&gpio6 31 0>;
	phy-supply = <&sw4_reg>;
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1_2>;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2_3>;
	status = "okay";
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4_1>;
	status = "okay";
};

&usbh1 {
	vbus-supply = <&reg_usb_ht_vbus>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbhost>;
	dr_mode = "host";
	status = "disabled";
	disable-over-current;
	maximum-speed = "full-speed";
};

&usbotg {
	vbus-supply = <&reg_usb_otg_vbus>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg>;
	disable-over-current;
	status = "disabled";
};

&usdhc4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc4_1>;
	status = "okay";
	keep-power-in-suspend;
	non-removable;
	no-1-8-v;
	bus-width = <4>;
	vmmc-supply = <&sw4_reg>;
};

&pwm3 {
	status = "disabled";
};

&pwm4 {
	status = "disabled";
};

&weim {
	status = "disabled";
};

&pcie {
	status = "disabled";
};

&iomuxc {
	trizeps7-pconxs {
		pinctrl_gpio_poweroff: gpio_poweroffgrp {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL4__GPIO4_IO14	0x80000000
			>;
		};
		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT9__I2C1_SCL 0x4001b8b1
				MX6QDL_PAD_CSI0_DAT8__I2C1_SDA 0x4001b8b1
			>;
		};
		pinctrl_i2c2_2: i2c2grp-2 {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL3__I2C2_SCL 0x4001b8b1
				MX6QDL_PAD_KEY_ROW3__I2C2_SDA 0x4001b8b1
				MX6QDL_PAD_NANDF_WP_B__GPIO6_IO09 0x130B0
			>;
		};
		pinctrl_enet_4_rmii: enetgrp-4-rmii {
			fsl,pins = <
				MX6QDL_PAD_ENET_MDIO__ENET_MDIO       0x1b0b0
				MX6QDL_PAD_ENET_MDC__ENET_MDC         0x1b0b0
				MX6QDL_PAD_ENET_RXD0__ENET_RX_DATA0   0x80000000
				MX6QDL_PAD_ENET_RXD1__ENET_RX_DATA1   0x80000000
				MX6QDL_PAD_ENET_CRS_DV__ENET_RX_EN    0x80000000
				MX6QDL_PAD_ENET_RX_ER__ENET_RX_ER     0x80000000
				MX6QDL_PAD_ENET_TX_EN__ENET_TX_EN     0x80000000
				MX6QDL_PAD_ENET_TXD0__ENET_TX_DATA0   0x80000000
				MX6QDL_PAD_ENET_TXD1__ENET_TX_DATA1   0x80000000
				MX6QDL_PAD_RGMII_TX_CTL__RGMII_TX_CTL 0x1b0b0
				MX6QDL_PAD_ENET_REF_CLK__ENET_TX_CLK  0x1b0b0
			>;
		};
		pinctrl_enet_4_rgmii: enetgrp-4-rgmii {
			fsl,pins = <
				MX6QDL_PAD_RGMII_RXC__RGMII_RXC		0x1b0b0
				MX6QDL_PAD_RGMII_RD0__RGMII_RD0		0x1b0b0
				MX6QDL_PAD_RGMII_RD1__RGMII_RD1		0x1b0b0
				MX6QDL_PAD_RGMII_RD2__RGMII_RD2		0x1b0b0
				MX6QDL_PAD_RGMII_RD3__RGMII_RD3		0x1b0b0
				MX6QDL_PAD_RGMII_RX_CTL__RGMII_RX_CTL	0x1b0b0
				MX6QDL_PAD_RGMII_TXC__RGMII_TXC		0x1b0b0
				MX6QDL_PAD_RGMII_TD0__RGMII_TD0		0x1b0b0
				MX6QDL_PAD_RGMII_TD1__RGMII_TD1		0x1b0b0
				MX6QDL_PAD_RGMII_TD2__RGMII_TD2		0x1b0b0
				MX6QDL_PAD_RGMII_TD3__RGMII_TD3		0x1b0b0
				MX6QDL_PAD_RGMII_TX_CTL__RGMII_TX_CTL	0x1b0b0
				MX6QDL_PAD_ENET_REF_CLK__ENET_TX_CLK	0x1b0b0
				MX6QDL_PAD_ENET_MDIO__ENET_MDIO		0x1b0b0
				MX6QDL_PAD_ENET_MDC__ENET_MDC		0x1b0b0
				MX6QDL_PAD_GPIO_16__ENET_REF_CLK	0x4001b0a8
			>;
		};
		pinctrl_uart1_2: uart1grp-2 {
		fsl,pins = <
			MX6QDL_PAD_SD3_DAT7__UART1_TX_DATA 0x1b0b1
			MX6QDL_PAD_SD3_DAT6__UART1_RX_DATA 0x1b0b1
			MX6QDL_PAD_SD3_DAT1__UART1_RTS_B 0x1b0b1
			MX6QDL_PAD_SD3_DAT0__UART1_CTS_B 0x1b0b1

			>;
		};
		pinctrl_uart2_3: uart2grp-3 {
			fsl,pins = <
				MX6QDL_PAD_SD3_DAT5__UART2_TX_DATA 0x1b0b1
				MX6QDL_PAD_SD3_DAT4__UART2_RX_DATA 0x1b0b1
				MX6QDL_PAD_SD3_CMD__UART2_CTS_B 0x1b0b1
				MX6QDL_PAD_SD3_CLK__UART2_RTS_B 0x1b0b1
			>;
		};
		pinctrl_uart4_1: uart4grp-1 {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL0__UART4_TX_DATA 0x1b0b1
				MX6QDL_PAD_KEY_ROW0__UART4_RX_DATA 0x1b0b1
			>;
		};
		pinctrl_usbhost: usbhostgrp {
			fsl,pins = <
				MX6QDL_PAD_NANDF_D2__GPIO2_IO02	0x80000000
				MX6QDL_PAD_NANDF_D1__GPIO2_IO01	0x80000000
			>;
		};
		pinctrl_usbotg: usbotggrp {
			fsl,pins = <
				MX6QDL_PAD_GPIO_1__USB_OTG_ID 		0x17059
				MX6QDL_PAD_NANDF_RB0__GPIO6_IO10 	0x80000000
				MX6QDL_PAD_NANDF_D0__GPIO2_IO00 	0x80000000
			>;
		};
		pinctrl_usdhc4_1: usdhc4grp-1 {
			fsl,pins = <
				MX6QDL_PAD_SD4_CMD__SD4_CMD    0x17059
				MX6QDL_PAD_SD4_CLK__SD4_CLK    0x10059
				MX6QDL_PAD_SD4_DAT0__SD4_DATA0 0x17059
				MX6QDL_PAD_SD4_DAT1__SD4_DATA1 0x17059
				MX6QDL_PAD_SD4_DAT2__SD4_DATA2 0x17059
				MX6QDL_PAD_SD4_DAT3__SD4_DATA3 0x17059
				MX6QDL_PAD_SD4_DAT4__SD4_DATA4 0x17059
				MX6QDL_PAD_SD4_DAT5__SD4_DATA5 0x17059
				MX6QDL_PAD_SD4_DAT6__SD4_DATA6 0x17059
				MX6QDL_PAD_SD4_DAT7__SD4_DATA7 0x17059
			>;
		};
	};
};
